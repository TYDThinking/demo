<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.akun.demo.mapper.UserMapper">

    <!--1、查询：通过(账号、密码) 查询用户-->
    <select id="findUserByCode" parameterType="com.akun.demo.model.User" resultType="com.akun.demo.model.User">
        select id,username, password, avatar,number,create_time,update_time,group_id from c_user
        where username = #{username} and password = #{password}
    </select>
    <!--1、查询：通过(账号、手机号、邮箱) 查询用户-->
    <select id="findUserByValue" parameterType="com.akun.demo.model.User" resultType="com.akun.demo.model.User">
        select id,username, password, avatar,number, create_time,update_time,group_id from c_user
        where username = #{username} and number = #{number}
    </select>
    <!--2、根据手机号查询用户信息-->
    <select id="findByNumber" resultType="com.akun.demo.model.User">
        select  id,username, password, avatar,number,create_time,update_time,group_id from c_user
        where number =#{number}
    </select>
    <!--3、根据手机号和密码查询用户信息-->
    <select id="findByNumberAndPassword" resultType="com.akun.demo.model.User">
        select  id,username, password, avatar,number,create_time,update_time,group_id from c_user
        where number =#{number} and  password = #{password}
    </select>
    <!--3、根据邮箱和密码查询用户信息-->
    <select id="findByEmailAndPassword" resultType="com.akun.demo.model.User">
        select  id,username, password, avatar,number,create_time,update_time,group_id from c_user
        where email =#{email} and  password = #{password}
    </select>
    <!--4、根据ID号查询用户信息-->
    <select id="findByUserId" resultType="com.akun.demo.model.User">
        select  id,username, password, avatar,number,create_time,update_time,group_id from c_user
        where id =#{userId}
    </select>
    <!--5、添加用户：通过user对象进行添加-->
    <insert id="save" parameterType="com.akun.demo.model.User">
        INSERT  INTO c_user (username, password, avatar,number,create_time,update_time,group_id)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR},
        #{number,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP},
        #{groupId,jdbcType=INTEGER})
    </insert>
    <!--6、更新：通过user (更新用户信息)-->
    <update id="updateUser" parameterType="com.akun.demo.model.User">
      update c_user set
      username=#{username},password=#{password},avatar=#{avatar},group_id=#{groupId},number=#{number}
      where id = #{id}
    </update>
    <!--7、删除用户：通过userId-->
    <delete id="deleteUserByUserId" parameterType="Integer">
        delete from c_user where id = #{userId}
    </delete>

</mapper>